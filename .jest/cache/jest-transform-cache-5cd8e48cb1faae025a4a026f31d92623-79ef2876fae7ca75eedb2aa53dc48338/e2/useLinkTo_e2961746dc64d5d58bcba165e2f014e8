5be08256567daf5bcba7be54ce8d4cdd
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useLinkTo = useLinkTo;
var _core = require("@react-navigation/core");
var React = _interopRequireWildcard(require("react"));
var _useLinkBuilder = require("./useLinkBuilder.js");
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != (0, _typeof2["default"])(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
function useLinkTo() {
  var navigation = React.useContext(_core.NavigationContainerRefContext);
  var _ref = (0, _useLinkBuilder.useLinkBuilder)(),
    buildAction = _ref.buildAction;
  var linkTo = React.useCallback(function (href) {
    if (navigation === undefined) {
      throw new Error("Couldn't find a navigation object. Is your component inside NavigationContainer?");
    }
    var action = buildAction(href);
    navigation.dispatch(action);
  }, [buildAction, navigation]);
  return linkTo;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29yZSIsInJlcXVpcmUiLCJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX3VzZUxpbmtCdWlsZGVyIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mMiIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaSIsInNldCIsInVzZUxpbmtUbyIsIm5hdmlnYXRpb24iLCJ1c2VDb250ZXh0IiwiTmF2aWdhdGlvbkNvbnRhaW5lclJlZkNvbnRleHQiLCJfcmVmIiwidXNlTGlua0J1aWxkZXIiLCJidWlsZEFjdGlvbiIsImxpbmtUbyIsInVzZUNhbGxiYWNrIiwiaHJlZiIsInVuZGVmaW5lZCIsIkVycm9yIiwiYWN0aW9uIiwiZGlzcGF0Y2giXSwic291cmNlcyI6WyIuLi8uLi9zcmMvdXNlTGlua1RvLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxJQUFBQSxLQUFBLEdBQUFDLE9BQUE7QUFDQSxJQUFBQyxLQUFBLEdBQUFDLHVCQUFBLENBQUFGLE9BQUE7QUFFQSxJQUFBRyxlQUFBLEdBQUFILE9BQUE7QUFBa0QsU0FBQUkseUJBQUFDLENBQUE7RUFBQSx5QkFBQUMsT0FBQTtFQUFBLElBQUFDLENBQUEsT0FBQUQsT0FBQTtJQUFBRSxDQUFBLE9BQUFGLE9BQUE7RUFBQSxRQUFBRix3QkFBQSxZQUFBQSx5QkFBQUMsQ0FBQTtJQUFBLE9BQUFBLENBQUEsR0FBQUcsQ0FBQSxHQUFBRCxDQUFBO0VBQUEsR0FBQUYsQ0FBQTtBQUFBO0FBQUEsU0FBQUgsd0JBQUFHLENBQUEsRUFBQUUsQ0FBQTtFQUFBLEtBQUFBLENBQUEsSUFBQUYsQ0FBQSxJQUFBQSxDQUFBLENBQUFJLFVBQUEsU0FBQUosQ0FBQTtFQUFBLGFBQUFBLENBQUEsb0JBQUFLLFFBQUEsYUFBQUwsQ0FBQSwwQkFBQUEsQ0FBQTtJQUFBLFdBQUFBO0VBQUE7RUFBQSxJQUFBRyxDQUFBLEdBQUFKLHdCQUFBLENBQUFHLENBQUE7RUFBQSxJQUFBQyxDQUFBLElBQUFBLENBQUEsQ0FBQUcsR0FBQSxDQUFBTixDQUFBLFVBQUFHLENBQUEsQ0FBQUksR0FBQSxDQUFBUCxDQUFBO0VBQUEsSUFBQVEsQ0FBQTtNQUFBQyxTQUFBO0lBQUE7SUFBQUMsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBRSx3QkFBQTtFQUFBLFNBQUFDLENBQUEsSUFBQWQsQ0FBQSxvQkFBQWMsQ0FBQSxPQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQWhCLENBQUEsRUFBQWMsQ0FBQTtJQUFBLElBQUFHLENBQUEsR0FBQVAsQ0FBQSxHQUFBQyxNQUFBLENBQUFFLHdCQUFBLENBQUFiLENBQUEsRUFBQWMsQ0FBQTtJQUFBRyxDQUFBLEtBQUFBLENBQUEsQ0FBQVYsR0FBQSxJQUFBVSxDQUFBLENBQUFDLEdBQUEsSUFBQVAsTUFBQSxDQUFBQyxjQUFBLENBQUFKLENBQUEsRUFBQU0sQ0FBQSxFQUFBRyxDQUFBLElBQUFULENBQUEsQ0FBQU0sQ0FBQSxJQUFBZCxDQUFBLENBQUFjLENBQUE7RUFBQTtFQUFBLE9BQUFOLENBQUEsY0FBQVIsQ0FBQSxFQUFBRyxDQUFBLElBQUFBLENBQUEsQ0FBQWUsR0FBQSxDQUFBbEIsQ0FBQSxFQUFBUSxDQUFBLEdBQUFBLENBQUE7QUFBQTtBQU0zQyxTQUFTVyxTQUFTQSxDQUFBLEVBQUc7RUFDMUIsSUFBTUMsVUFBVSxHQUFHeEIsS0FBSyxDQUFDeUIsVUFBVSxDQUFDM0IsS0FBQSxDQUFBNEIsNkJBQTZCLENBQUM7RUFDbEUsSUFBQUMsSUFBQSxHQUF3QixJQUFBekIsZUFBQSxDQUFBMEIsY0FBYyxFQUFDLENBQUM7SUFBaENDLFdBQUEsR0FBQUYsSUFBQSxDQUFBRSxXQUFBO0VBRVIsSUFBTUMsTUFBTSxHQUFHOUIsS0FBSyxDQUFDK0IsV0FBVyxDQUM3QixVQUFBQyxJQUFZLEVBQUs7SUFDaEIsSUFBSVIsVUFBVSxLQUFLUyxTQUFTLEVBQUU7TUFDNUIsTUFBTSxJQUFJQyxLQUFLLENBQ2Isa0ZBQ0YsQ0FBQztJQUNIO0lBRUEsSUFBTUMsTUFBTSxHQUFHTixXQUFXLENBQUNHLElBQUksQ0FBQztJQUVoQ1IsVUFBVSxDQUFDWSxRQUFRLENBQUNELE1BQU0sQ0FBQztFQUM3QixDQUFDLEVBQ0QsQ0FBQ04sV0FBVyxFQUFFTCxVQUFVLENBQzFCLENBQUM7RUFFRCxPQUFPTSxNQUFNO0FBQ2YiLCJpZ25vcmVMaXN0IjpbXX0=