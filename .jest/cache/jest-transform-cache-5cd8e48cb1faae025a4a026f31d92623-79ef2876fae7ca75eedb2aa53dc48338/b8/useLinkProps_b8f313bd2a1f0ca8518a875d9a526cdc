3146191c82cacde3ec40bda60d378570
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useLinkProps = useLinkProps;
var _core = require("@react-navigation/core");
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _LinkingContext = require("./LinkingContext.js");
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != (0, _typeof2["default"])(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
var _getStateFromParams = function getStateFromParams(params) {
  if (params !== null && params !== void 0 && params.state) {
    return params.state;
  }
  if (params !== null && params !== void 0 && params.screen) {
    return {
      routes: [{
        name: params.screen,
        params: params.params,
        state: params.screen ? _getStateFromParams(params.params) : undefined
      }]
    };
  }
  return undefined;
};
function useLinkProps(_ref) {
  var _options$getPathFromS;
  var screen = _ref.screen,
    params = _ref.params,
    href = _ref.href,
    action = _ref.action;
  var root = React.useContext(_core.NavigationContainerRefContext);
  var navigation = React.useContext(_core.NavigationHelpersContext);
  var _React$useContext = React.useContext(_LinkingContext.LinkingContext),
    options = _React$useContext.options;
  var onPress = function onPress(e) {
    var _e$currentTarget;
    var hasModifierKey = e.metaKey || e.altKey || e.ctrlKey || e.shiftKey;
    var isLeftClick = e.button == null || e.button === 0;
    var isSelfTarget = [undefined, null, '', 'self'].includes((_e$currentTarget = e.currentTarget) === null || _e$currentTarget === void 0 ? void 0 : _e$currentTarget.target);
    var shouldHandle = false;
    if (_reactNative.Platform.OS !== 'web' || !e) {
      shouldHandle = true;
    } else if (!hasModifierKey && isLeftClick && isSelfTarget) {
      e.preventDefault();
      shouldHandle = true;
    }
    if (shouldHandle) {
      if (action) {
        if (navigation) {
          navigation.dispatch(action);
        } else if (root) {
          root.dispatch(action);
        } else {
          throw new Error("Couldn't find a navigation object. Is your component inside NavigationContainer?");
        }
      } else {
        navigation === null || navigation === void 0 || navigation.navigate(screen, params);
      }
    }
  };
  var getPathFromStateHelper = (_options$getPathFromS = options === null || options === void 0 ? void 0 : options.getPathFromState) !== null && _options$getPathFromS !== void 0 ? _options$getPathFromS : _core.getPathFromState;
  return {
    href: href !== null && href !== void 0 ? href : _reactNative.Platform.OS === 'web' && screen != null ? getPathFromStateHelper({
      routes: [{
        name: screen,
        params: params,
        state: _getStateFromParams(params)
      }]
    }, options === null || options === void 0 ? void 0 : options.config) : undefined,
    accessibilityRole: 'link',
    onPress: onPress
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29yZSIsInJlcXVpcmUiLCJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwiX3JlYWN0TmF0aXZlIiwiX0xpbmtpbmdDb250ZXh0IiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwiZSIsIldlYWtNYXAiLCJyIiwidCIsIl9fZXNNb2R1bGUiLCJfdHlwZW9mMiIsImhhcyIsImdldCIsIm4iLCJfX3Byb3RvX18iLCJhIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJnZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IiLCJ1IiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiaSIsInNldCIsImdldFN0YXRlRnJvbVBhcmFtcyIsInBhcmFtcyIsInN0YXRlIiwic2NyZWVuIiwicm91dGVzIiwibmFtZSIsInVuZGVmaW5lZCIsInVzZUxpbmtQcm9wcyIsIl9yZWYiLCJfb3B0aW9ucyRnZXRQYXRoRnJvbVMiLCJocmVmIiwiYWN0aW9uIiwicm9vdCIsInVzZUNvbnRleHQiLCJOYXZpZ2F0aW9uQ29udGFpbmVyUmVmQ29udGV4dCIsIm5hdmlnYXRpb24iLCJOYXZpZ2F0aW9uSGVscGVyc0NvbnRleHQiLCJfUmVhY3QkdXNlQ29udGV4dCIsIkxpbmtpbmdDb250ZXh0Iiwib3B0aW9ucyIsIm9uUHJlc3MiLCJfZSRjdXJyZW50VGFyZ2V0IiwiaGFzTW9kaWZpZXJLZXkiLCJtZXRhS2V5IiwiYWx0S2V5IiwiY3RybEtleSIsInNoaWZ0S2V5IiwiaXNMZWZ0Q2xpY2siLCJidXR0b24iLCJpc1NlbGZUYXJnZXQiLCJpbmNsdWRlcyIsImN1cnJlbnRUYXJnZXQiLCJ0YXJnZXQiLCJzaG91bGRIYW5kbGUiLCJQbGF0Zm9ybSIsIk9TIiwicHJldmVudERlZmF1bHQiLCJkaXNwYXRjaCIsIkVycm9yIiwibmF2aWdhdGUiLCJnZXRQYXRoRnJvbVN0YXRlSGVscGVyIiwiZ2V0UGF0aEZyb21TdGF0ZSIsImNvbmZpZyIsImFjY2Vzc2liaWxpdHlSb2xlIl0sInNvdXJjZXMi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