4ee9ccc6360105b94d3e99108b68412f
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useFocusEvents = useFocusEvents;
var React = _interopRequireWildcard(require("react"));
var _NavigationContext = require("./NavigationContext.js");
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != (0, _typeof2["default"])(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
function useFocusEvents(_ref) {
  var state = _ref.state,
    emitter = _ref.emitter;
  var navigation = React.useContext(_NavigationContext.NavigationContext);
  var lastFocusedKeyRef = React.useRef();
  var currentFocusedKey = state.routes[state.index].key;
  React.useEffect(function () {
    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('focus', function () {
      lastFocusedKeyRef.current = currentFocusedKey;
      emitter.emit({
        type: 'focus',
        target: currentFocusedKey
      });
    });
  }, [currentFocusedKey, emitter, navigation]);
  React.useEffect(function () {
    return navigation === null || navigation === void 0 ? void 0 : navigation.addListener('blur', function () {
      lastFocusedKeyRef.current = undefined;
      emitter.emit({
        type: 'blur',
        target: currentFocusedKey
      });
    });
  }, [currentFocusedKey, emitter, navigation]);
  React.useEffect(function () {
    var lastFocusedKey = lastFocusedKeyRef.current;
    lastFocusedKeyRef.current = currentFocusedKey;
    if (lastFocusedKey === undefined && !navigation) {
      emitter.emit({
        type: 'focus',
        target: currentFocusedKey
      });
    }
    if (lastFocusedKey === currentFocusedKey || !(navigation ? navigation.isFocused() : true)) {
      return;
    }
    if (lastFocusedKey === undefined) {
      return;
    }
    emitter.emit({
      type: 'blur',
      target: lastFocusedKey
    });
    emitter.emit({
      type: 'focus',
      target: currentFocusedKey
    });
  }, [currentFocusedKey, emitter, navigation]);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9OYXZpZ2F0aW9uQ29udGV4dCIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImUiLCJXZWFrTWFwIiwiciIsInQiLCJfX2VzTW9kdWxlIiwiX3R5cGVvZjIiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJ1c2VGb2N1c0V2ZW50cyIsIl9yZWYiLCJzdGF0ZSIsImVtaXR0ZXIiLCJuYXZpZ2F0aW9uIiwidXNlQ29udGV4dCIsIk5hdmlnYXRpb25Db250ZXh0IiwibGFzdEZvY3VzZWRLZXlSZWYiLCJ1c2VSZWYiLCJjdXJyZW50Rm9jdXNlZEtleSIsInJvdXRlcyIsImluZGV4Iiwia2V5IiwidXNlRWZmZWN0IiwiYWRkTGlzdGVuZXIiLCJjdXJyZW50IiwiZW1pdCIsInR5cGUiLCJ0YXJnZXQiLCJ1bmRlZmluZWQiLCJsYXN0Rm9jdXNlZEtleSIsImlzRm9jdXNlZCJdLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91c2VGb2N1c0V2ZW50cy50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQ0EsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBRUEsSUFBQUMsa0JBQUEsR0FBQUQsT0FBQTtBQUF3RCxTQUFBRSx5QkFBQUMsQ0FBQTtFQUFBLHlCQUFBQyxPQUFBO0VBQUEsSUFBQUMsQ0FBQSxPQUFBRCxPQUFBO0lBQUFFLENBQUEsT0FBQUYsT0FBQTtFQUFBLFFBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxDQUFBO0lBQUEsT0FBQUEsQ0FBQSxHQUFBRyxDQUFBLEdBQUFELENBQUE7RUFBQSxHQUFBRixDQUFBO0FBQUE7QUFBQSxTQUFBSix3QkFBQUks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