1bbf2d115ecbe277560d9da09739679b
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
var _excluded = ["emit"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useNavigationCache = useNavigationCache;
var _routers = require("@react-navigation/routers");
var React = _interopRequireWildcard(require("react"));
var _NavigationBuilderContext = require("./NavigationBuilderContext.js");
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != (0, _typeof2["default"])(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
function useNavigationCache(_ref) {
  var state = _ref.state,
    getState = _ref.getState,
    navigation = _ref.navigation,
    _setOptions = _ref.setOptions,
    router = _ref.router,
    emitter = _ref.emitter;
  var _React$useContext = React.useContext(_NavigationBuilderContext.NavigationBuilderContext),
    stackRef = _React$useContext.stackRef;
  var base = React.useMemo(function () {
    var emit = navigation.emit,
      rest = (0, _objectWithoutProperties2["default"])(navigation, _excluded);
    var actions = _objectSpread(_objectSpread({}, router.actionCreators), _routers.CommonActions);
    var dispatch = function dispatch() {
      throw new Error('Actions cannot be dispatched from a placeholder screen.');
    };
    var helpers = Object.keys(actions).reduce(function (acc, name) {
      acc[name] = dispatch;
      return acc;
    }, {});
    return _objectSpread(_objectSpread(_objectSpread({}, rest), helpers), {}, {
      addListener: function addListener() {
        return function () {};
      },
      removeListener: function removeListener() {},
      dispatch: dispatch,
      getParent: function getParent(id) {
        if (id !== undefined && id === rest.getId()) {
          return base;
        }
        return rest.getParent(id);
      },
      setOptions: function setOptions() {
        throw new Error('Options cannot be set from a placeholder screen.');
      },
      isFocused: function isFocused() {
        return false;
      }
    });
  }, [navigation, router.actionCreators]);
  var cache = React.useMemo(function () {
    return {
      current: {}
    };
  }, [base, getState, navigation, _setOptions, emitter]);
  cache.current = state.routes.reduce(function (acc, route) {
    var previous = cache.current[route.key];
    if (previous) {
      acc[route.key] = previous;
    } else {
      var _dispatch = function dispatch(thunk) {
        var action = typeof thunk === 'function' ? thunk(getState()) : thunk;
        if (action != null) {
          navigation.dispatch(_objectSpread({
            source: route.key
          }, action));
        }
      };
      var withStack = function withStack(callback) {
        var isStackSet = false;
        try {
          if (process.env.NODE_ENV !== 'production' && stackRef && !stackRef.current) {
            stackRef.current = new Error().stack;
            isStackSet = true;
          }
          callback();
        } finally {
          if (isStackSet && stackRef) {
            stackRef.current = undefined;
          }
        }
      };
      var actions = _objectSpread(_objectSpread({}, router.actionCreators), _routers.CommonActions);
      var helpers = Object.keys(actions).reduce(function (acc, name) {
        acc[name] = function () {
          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
            args[_key] = arguments[_key];
          }
          return withStack(function () {
            return (_dispatch(actions[name].apply(actions, args))
            );
          });
        };
        return acc;
      }, {});
      acc[route.key] = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, base), helpers), emitter.create(route.key)), {}, {
        dispatch: function dispatch(thunk) {
          return withStack(function () {
            return _dispatch(thunk);
          });
        },
        getParent: function getParent(id) {
          if (id !== undefined && id === base.getId()) {
            return acc[route.key];
          }
          return base.getParent(id);
        },
        setOptions: function setOptions(options) {
          _setOptions(function (o) {
            return _objectSpread(_objectSpread({}, o), {}, (0, _defineProperty2["default"])({}, route.key, _objectSpread(_objectSpread({}, o[route.key]), options)));
          });
        },
        isFocused: function isFocused() {
          var state = base.getState();
          if (state.routes[state.index].key !== route.key) {
            return false;
          }
          return navigation ? navigation.isFocused() : true;
        }
      });
    }
    return acc;
  }, {});
  return {
    base: base,
    navigations: cache.current
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,