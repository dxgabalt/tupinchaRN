1ab236043eb105957bac67bff01aa72c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.get = get;
exports.getEnforcing = getEnforcing;
var _invariant = _interopRequireDefault(require("invariant"));
var NativeModules = require('../BatchedBridge/NativeModules');
var turboModuleProxy = global.__turboModuleProxy;
var useLegacyNativeModuleInterop = global.RN$Bridgeless !== true || global.RN$TurboInterop === true;
function requireModule(name) {
  if (turboModuleProxy != null) {
    var module = turboModuleProxy(name);
    if (module != null) {
      return module;
    }
  }
  if (useLegacyNativeModuleInterop) {
    var legacyModule = NativeModules[name];
    if (legacyModule != null) {
      return legacyModule;
    }
  }
  return null;
}
function get(name) {
  return requireModule(name);
}
function getEnforcing(name) {
  var module = requireModule(name);
  (0, _invariant["default"])(module != null, "TurboModuleRegistry.getEnforcing(...): '".concat(name, "' could not be found. ") + 'Verify that a module by this name is registered in the native binary.');
  return module;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW52YXJpYW50IiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsInJlcXVpcmUiLCJOYXRpdmVNb2R1bGVzIiwidHVyYm9Nb2R1bGVQcm94eSIsImdsb2JhbCIsIl9fdHVyYm9Nb2R1bGVQcm94eSIsInVzZUxlZ2FjeU5hdGl2ZU1vZHVsZUludGVyb3AiLCJSTiRCcmlkZ2VsZXNzIiwiUk4kVHVyYm9JbnRlcm9wIiwicmVxdWlyZU1vZHVsZSIsIm5hbWUiLCJtb2R1bGUiLCJsZWdhY3lNb2R1bGUiLCJnZXQiLCJnZXRFbmZvcmNpbmciLCJpbnZhcmlhbnQiLCJjb25jYXQiXSwic291cmNlcyI6WyJUdXJib01vZHVsZVJlZ2lzdHJ5LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBNZXRhIFBsYXRmb3JtcywgSW5jLiBhbmQgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3RcbiAqIEBmb3JtYXRcbiAqL1xuXG5pbXBvcnQgdHlwZSB7VHVyYm9Nb2R1bGV9IGZyb20gJy4vUkNURXhwb3J0JztcblxuaW1wb3J0IGludmFyaWFudCBmcm9tICdpbnZhcmlhbnQnO1xuXG5jb25zdCBOYXRpdmVNb2R1bGVzID0gcmVxdWlyZSgnLi4vQmF0Y2hlZEJyaWRnZS9OYXRpdmVNb2R1bGVzJyk7XG5cbmNvbnN0IHR1cmJvTW9kdWxlUHJveHkgPSBnbG9iYWwuX190dXJib01vZHVsZVByb3h5O1xuXG5jb25zdCB1c2VMZWdhY3lOYXRpdmVNb2R1bGVJbnRlcm9wID1cbiAgZ2xvYmFsLlJOJEJyaWRnZWxlc3MgIT09IHRydWUgfHwgZ2xvYmFsLlJOJFR1cmJvSW50ZXJvcCA9PT0gdHJ1ZTtcblxuZnVuY3Rpb24gcmVxdWlyZU1vZHVsZTxUOiBUdXJib01vZHVsZT4obmFtZTogc3RyaW5nKTogP1Qge1xuICBpZiAodHVyYm9Nb2R1bGVQcm94eSAhPSBudWxsKSB7XG4gICAgY29uc3QgbW9kdWxlOiA/VCA9IHR1cmJvTW9kdWxlUHJveHkobmFtZSk7XG4gICAgaWYgKG1vZHVsZSAhPSBudWxsKSB7XG4gICAgICByZXR1cm4gbW9kdWxlO1xuICAgIH1cbiAgfVxuXG4gIGlmICh1c2VMZWdhY3lOYXRpdmVNb2R1bGVJbnRlcm9wKSB7XG4gICAgLy8gQmFja3dhcmQgY29tcGF0aWJpbGl0eSBsYXllciBkdXJpbmcgbWlncmF0aW9uLlxuICAgIGNvbnN0IGxlZ2FjeU1vZHVsZTogP1QgPSBOYXRpdmVNb2R1bGVzW25hbWVdO1xuICAgIGlmIChsZWdhY3lNb2R1bGUgIT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGxlZ2FjeU1vZHVsZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gbnVsbDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldDxUOiBUdXJib01vZHVsZT4obmFtZTogc3RyaW5nKTogP1Qge1xuICByZXR1cm4gcmVxdWlyZU1vZHVsZTxUPihuYW1lKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEVuZm9yY2luZzxUOiBUdXJib01vZHVsZT4obmFtZTogc3RyaW5nKTogVCB7XG4gIGNvbnN0IG1vZHVsZSA9IHJlcXVpcmVNb2R1bGU8VD4obmFtZSk7XG4gIGludmFyaWFudChcbiAgICBtb2R1bGUgIT0gbnVsbCxcbiAgICBgVHVyYm9Nb2R1bGVSZWdpc3RyeS5nZXRFbmZvcmNpbmcoLi4uKTogJyR7bmFtZX0nIGNvdWxkIG5vdCBiZSBmb3VuZC4gYCArXG4gICAgICAnVmVyaWZ5IHRoYXQgYSBtb2R1bGUgYnkgdGhpcyBuYW1lIGlzIHJlZ2lzdGVyZWQgaW4gdGhlIG5hdGl2ZSBiaW5hcnkuJyxcbiAgKTtcbiAgcmV0dXJuIG1vZHVsZTtcbn1cbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFZQSxJQUFBQSxVQUFBLEdBQUFDLHNCQUFBLENBQUFDLE9BQUE7QUFFQSxJQUFNQyxhQUFhLEdBQUdELE9BQU8sQ0FBQyxnQ0FBZ0MsQ0FBQztBQUUvRCxJQUFNRSxnQkFBZ0IsR0FBR0MsTUFBTSxDQUFDQyxrQkFBa0I7QUFFbEQsSUFBTUMsNEJBQTRCLEdBQ2hDRixNQUFNLENBQUNHLGFBQWEsS0FBSyxJQUFJLElBQUlILE1BQU0sQ0FBQ0ksZUFBZSxLQUFLLElBQUk7QUFFbEUsU0FBU0MsYUFBYUEsQ0FBaUJDLElBQVksRUFBTTtFQUN2RCxJQUFJUCxnQkFBZ0IsSUFBSSxJQUFJLEVBQUU7SUFDNUIsSUFBTVEsTUFBVSxHQUFHUixnQkFBZ0IsQ0FBQ08sSUFBSSxDQUFDO0lBQ3pDLElBQUlDLE1BQU0sSUFBSSxJQUFJLEVBQUU7TUFDbEIsT0FBT0EsTUFBTTtJQUNmO0VBQ0Y7RUFFQSxJQUFJTCw0QkFBNEIsRUFBRTtJQUVoQyxJQUFNTSxZQUFnQixHQUFHVixhQUFhLENBQUNRLElBQUksQ0FBQztJQUM1QyxJQUFJRSxZQUFZLElBQUksSUFBSSxFQUFFO01BQ3hCLE9BQU9BLFlBQVk7SUFDckI7RUFDRjtFQUVBLE9BQU8sSUFBSTtBQUNiO0FBRU8sU0FBU0MsR0FBR0EsQ0FBaUJILElBQVksRUFBTTtFQUNwRCxPQUFPRCxhQUFhLENBQUlDLElBQUksQ0FBQztBQUMvQjtBQUVPLFNBQVNJLFlBQVlBLENBQWlCSixJQUFZLEVBQUs7RUFDNUQsSUFBTUMsTUFBTSxHQUFHRixhQUFhLENBQUlDLElBQUksQ0FBQztFQUNyQyxJQUFBSyxxQkFBUyxFQUNQSixNQUFNLElBQUksSUFBSSxFQUNkLDJDQUFBSyxNQUFBLENBQTJDTixJQUFJLDhCQUM3Qyx1RUFDSixDQUFDO0VBQ0QsT0FBT0MsTUFBTTtBQUNmIiwiaWdub3JlTGlzdCI6W119