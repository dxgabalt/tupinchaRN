7296d5f282f6e0db1c513291052d833c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var ImagePicker = _interopRequireWildcard(require("expo-image-picker"));
var _native = require("@react-navigation/native");
var _stylesRegistro = _interopRequireDefault(require("../styles/stylesRegistro"));
var _AuthService = require("../services/AuthService");
var _picker = require("@react-native-picker/picker");
var _ServiceService = require("../services/ServiceService");
var _MunicipoService = require("../services/MunicipoService");
var _ProvinciaService = require("../services/ProvinciaService");
var _PlanService = require("../services/PlanService");
var _ConfiguracionService = require("../services/ConfiguracionService");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n["default"] = e, t && t.set(e, n), n; }
var RegistroScreen = function RegistroScreen() {
  var navigation = (0, _native.useNavigation)();
  var _useState = (0, _react.useState)(""),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    nombre = _useState2[0],
    setNombre = _useState2[1];
  var _useState3 = (0, _react.useState)(""),
    _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
    correo = _useState4[0],
    setCorreo = _useState4[1];
  var _useState5 = (0, _react.useState)(""),
    _useState6 = (0, _slicedToArray2["default"])(_useState5, 2),
    contrasena = _useState6[0],
    setContrasena = _useState6[1];
  var _useState7 = (0, _react.useState)(""),
    _useState8 = (0, _slicedToArray2["default"])(_useState7, 2),
    telefono = _useState8[0],
    setTelefono = _useState8[1];
  var _useState9 = (0, _react.useState)(false),
    _useState10 = (0, _slicedToArray2["default"])(_useState9, 2),
    esProveedor = _useState10[0],
    setEsProveedor = _useState10[1];
  var _useState11 = (0, _react.useState)(false),
    _useState12 = (0, _slicedToArray2["default"])(_useState11, 2),
    esComision = _useState12[0],
    setEsComision = _useState12[1];
  var _useState13 = (0, _react.useState)(""),
    _useState14 = (0, _slicedToArray2["default"])(_useState13, 2),
    especialidad = _useState14[0],
    setEspecialidad = _useState14[1];
  var _useState15 = (0, _react.useState)(0),
    _useState16 = (0, _slicedToArray2["default"])(_useState15, 2),
    servicio = _useState16[0],
    setServicio = _useState16[1];
  var _useState17 = (0, _react.useState)(1),
    _useState18 = (0, _slicedToArray2["default"])(_useState17, 2),
    plan = _useState18[0],
    setPlan = _useState18[1];
  var _useState19 = (0, _react.useState)(""),
    _useState20 = (0, _slicedToArray2["default"])(_useState19, 2),
    descripcion = _useState20[0],
    setDescripcion = _useState20[1];
  var _useState21 = (0, _react.useState)(null),
    _useState22 = (0, _slicedToArray2["default"])(_useState21, 2),
    imagenPerfil = _useState22[0],
    setImagenPerfil = _useState22[1];
  var _useState23 = (0, _react.useState)(false),
    _useState24 = (0, _slicedToArray2["default"])(_useState23, 2),
    loading = _useState24[0],
    setLoading = _useState24[1];
  var _useState25 = (0, _react.useState)([]),
    _useState26 = (0, _slicedToArray2["default"])(_useState25, 2),
    servicios = _useState26[0],
    setServicios = _useState26[1];
  var _useState27 = (0, _react.useState)([]),
    _useState28 = (0, _slicedToArray2["default"])(_useState27, 2),
    provincias = _useState28[0],
    setProvincias = _useState28[1];
  var _useState29 = (0, _react.useState)([]),
    _useState30 = (0, _slicedToArray2["default"])(_useState29, 2),
    municipios = _useState30[0],
    setMunicipios = _useState30[1];
  var _useState31 = (0, _react.useState)(null),
    _useState32 = (0, _slicedToArray2["default"])(_useState31, 2),
    configuracion = _useState32[0],
    setConfiguracion = _useState32[1];
  var _useState33 = (0, _react.useState)([]),
    _useState34 = (0, _slicedToArray2["default"])(_useState33, 2),
    planes = _useState34[0],
    setPlanes = _useState34[1];
  var _useState35 = (0, _react.useState)(false),
    _useState36 = (0, _slicedToArray2["default"])(_useState35, 2),
    modalVisible = _useState36[0],
    setModalVisible = _useState36[1];
  var _useState37 = (0, _react.useState)(null),
    _useState38 = (0, _slicedToArray2["default"])(_useState37, 2),
    provinciaSeleccionada = _useState38[0],
    setProvinciaSeleccionada = _useState38[1];
  var _useState39 = (0, _react.useState)(0),
    _useState40 = (0, _slicedToArray2["default"])(_useState39, 2),
    municipioSeleccionado = _useState40[0],
    setMunicipioSeleccionado = _useState40[1];
  var _useState41 = (0, _react.useState)(null),
    _useState42 = (0, _slicedToArray2["default"])(_useState41, 2),
    nombreMunicipioSeleccionado = _useState42[0],
    setNombreMunicipioSeleccionado = _useState42[1];
  var _useState43 = (0, _react.useState)(false),
    _useState44 = (0, _slicedToArray2["default"])(_useState43, 2),
    mostrarMunicipios = _useState44[0],
    setMostrarMunicipios = _useState44[1];
  var _useState45 = (0, _react.useState)(null),
    _useState46 = (0, _slicedToArray2["default"])(_useState45, 2),
    nombreProvinciaSeleccionada = _useState46[0],
    setNombreProvinciaSeleccionada = _useState46[1];
  var seleccionarImagen = function () {
    var _ref = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee() {
      var _yield$ImagePicker$re, status, resultado, imageUri;
      return _regenerator["default"].wrap(function _callee$(_context) {
        while (1) switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return ImagePicker.requestMediaLibraryPermissionsAsync();
          case 2:
            _yield$ImagePicker$re = _context.sent;
            status = _yield$ImagePicker$re.status;
            if (!(status !== "granted")) {
              _context.next = 7;
              break;
            }
            _reactNative.Alert.alert("Permiso denegado", "Necesitamos acceso a tu galería para subir la imagen.");
            return _context.abrupt("return");
          case 7:
            _context.next = 9;
            return ImagePicker.launchImageLibraryAsync({
              mediaTypes: ImagePicker.MediaTypeOptions.Images,
              allowsEditing: true,
              quality: 1
            });
          case 9:
            resultado = _context.sent;
            if (!resultado.cancelled && resultado.assets) {
              imageUri = resultado.assets[0].uri;
              setImagenPerfil(imageUri);
            }
          case 11:
          case "end":
            return _context.stop();
        }
      }, _callee);
    }));
    return function seleccionarImagen() {
      return _ref.apply(this, arguments);
    };
  }();
  var validarCampos = function validarCampos() {
    if (!nombre.trim() || !correo.trim() || !contrasena.trim() || !telefono.trim()) {
      _reactNative.Alert.alert("Error", "Todos los campos son obligatorios.");
      return false;
    }
    if (!correo.includes("@")) {
      _reactNative.Alert.alert("Error", "Por favor, ingresa un correo válido.");
      return false;
    }
    if (contrasena.length < 6) {
      _reactNative.Alert.alert("Error", "La contraseña debe tener al menos 6 caracteres.");
      return false;
    }
    if (esProveedor && !imagenPerfil) {
      _reactNative.Alert.alert("Error", "Los proveedores deben subir una imagen de perfil.");
      return false;
    }
    return true;
  };
  var obtenerServicios = function () {
    var _ref2 = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee2() {
      var _servicios;
      return _regenerator["default"].wrap(function _callee2$(_context2) {
        while (1) switch (_context2.prev = _context2.next) {
          case 0:
            _context2.prev = 0;
            _context2.next = 3;
            return _ServiceService.ServiceService.obtenerTodos();
          case 3:
            _servicios = _context2.sent;
            setServicios(_servicios.map(function (servicio) {
              return {
                id: servicio.id,
                category: servicio.category,
                icono: servicio.icono,
                tags: servicio.tags
              };
            }));
            _context2.next = 10;
            break;
          case 7:
            _context2.prev = 7;
            _context2.t0 = _context2["catch"](0);
            console.error("Error obteniendo servicios:", _context2.t0);
          case 10:
          case "end":
            return _context2.stop();
        }
      }, _callee2, null, [[0, 7]]);
    }));
    return function obtenerServicios() {
      return _ref2.apply(this, arguments);
    };
  }();
  var obtenerConfiguracion = function () {
    var _ref3 = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee3() {
      var _configuracion;
      return _regenerator["default"].wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            _context3.prev = 0;
            _context3.next = 3;
            return _ConfiguracionService.ConfiguracionService.obtenerPorId(1);
          case 3:
            _configuracion = _context3.sent;
            setConfiguracion(_configuracion);
            _context3.next = 10;
            break;
          case 7:
            _context3.prev = 7;
            _context3.t0 = _context3["catch"](0);
            console.error("Error obteniendo servicios:", _context3.t0);
          case 10:
          case "end":
            return _context3.stop();
        }
      }, _callee3, null, [[0, 7]]);
    }));
    return function obtenerConfiguracion() {
      return _ref3.apply(this, arguments);
    };
  }();
  var obtenerPlanes = function () {
    var _ref4 = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee4() {
      var _servicios2;
      return _regenerator["default"].wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            _context4.prev = 0;
            _context4.next = 3;
            return _PlanService.PlanService.obtenerTodos();
          case 3:
            _servicios2 = _context4.sent;
            setPlanes(_servicios2.map(function (plan) {
              return {
                id: plan.id,
                nombre: plan.nombre,
                costo: plan.costo,
                duracion: plan.duracion,
                created_at: plan.created_at
              };
            }));
            _context4.next = 10;
            break;
          case 7:
            _context4.prev = 7;
            _context4.t0 = _context4["catch"](0);
            console.error("Error obteniendo servicios:", _context4.t0);
          case 10:
          case "end":
            return _context4.stop();
        }
      }, _callee4, null, [[0, 7]]);
    }));
    return function obtenerPlanes() {
      return _ref4.apply(this, arguments);
    };
  }();
  (0, _react.useEffect)(function () {
    obtenerConfiguracion();
  }, []);
  (0, _react.useEffect)(function () {
    obtenerServicios();
  }, []);
  (0, _react.useEffect)(function () {
    obtenerPlanes();
  }, []);
  var registrarUsuario = function () {
    var _ref5 = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee5() {
      var id_usuario, url_foto, perfil;
      return _regenerator["default"].wrap(function _callee5$(_context5) {
        while (1) switch (_context5.prev = _context5.next) {
          case 0:
            if (validarCampos()) {
              _context5.next = 2;
              break;
            }
            return _context5.abrupt("return");
          case 2:
            setLoading(true);
            _context5.prev = 3;
            _context5.next = 6;
            return _AuthService.AuthService.crearUsuarioAuth(correo, contrasena);
          case 6:
            id_usuario = _context5.sent;
            if (!esProveedor) {
              _context5.next = 14;
              break;
            }
            _context5.next = 10;
            return _AuthService.AuthService.subirFotoPerfil(id_usuario, imagenPerfil);
          case 10:
            url_foto = _context5.sent;
            _AuthService.AuthService.guardarPerfil({
              usuario_id: id_usuario,
              nombre: nombre,
              telefono: telefono,
              municipio_id: municipioSeleccionado,
              servicio_id: servicio,
              plan_id: plan,
              esProveedor: esProveedor,
              especialidad: especialidad,
              descripcion: descripcion,
              url_foto: url_foto,
              esComision: esComision
            });
            _context5.next = 15;
            break;
          case 14:
            _AuthService.AuthService.guardarPerfil({
              usuario_id: id_usuario,
              nombre: nombre,
              telefono: telefono,
              municipio_id: municipioSeleccionado,
              esProveedor: esProveedor
            });
          case 15:
            _context5.next = 17;
            return _AuthService.AuthService.obtenerPerfil();
          case 17:
            perfil = _context5.sent;
            if ((perfil === null || perfil === void 0 ? void 0 : perfil.role_id) !== 3) {
              navigation.navigate("PantallaNegocios");
            } else {
              _reactNative.Alert.alert("Registro exitoso", "Tu cuenta ha sido creada y será validada en 24 horas.");
              alert("Registro exitoso, Tu cuenta ha sido creada y será validada en 24 horas. ");
              navigation.navigate("GestionSolicitudes");
            }
            _context5.next = 25;
            break;
          case 21:
            _context5.prev = 21;
            _context5.t0 = _context5["catch"](3);
            setLoading(false);
            _reactNative.Alert.alert("Error", "No se pudo registrar el usuario.");
          case 25:
          case "end":
            return _context5.stop();
        }
      }, _callee5, null, [[3, 21]]);
    }));
    return function registrarUsuario() {
      return _ref5.apply(this, arguments);
    };
  }();
  (0, _react.useEffect)(function () {
    var obtenerProvincias = function () {
      var _ref6 = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee6() {
        var _provincias;
        return _regenerator["default"].wrap(function _callee6$(_context6) {
          while (1) switch (_context6.prev = _context6.next) {
            case 0:
              _context6.prev = 0;
              _context6.next = 3;
              return _ProvinciaService.ProvinciaService.obtenerTodos();
            case 3:
              _provincias = _context6.sent;
              setProvincias(_provincias);
              _context6.next = 10;
              break;
            case 7:
              _context6.prev = 7;
              _context6.t0 = _context6["catch"](0);
              console.error("Error obteniendo provincias:", _context6.t0);
            case 10:
            case "end":
              return _context6.stop();
          }
        }, _callee6, null, [[0, 7]]);
      }));
      return function obtenerProvincias() {
        return _ref6.apply(this, arguments);
      };
    }();
    obtenerProvincias();
  }, []);
  (0, _react.useEffect)(function () {
    if (provinciaSeleccionada) {
      var obtenerMunicipios = function () {
        var _ref7 = (0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee7() {
          var _municipios;
          return _regenerator["default"].wrap(function _callee7$(_context7) {
            while (1) switch (_context7.prev = _context7.next) {
              case 0:
                _context7.prev = 0;
                _context7.next = 3;
                return _MunicipoService.MunicipioService.obtenerTodos({
                  provincia_id: provinciaSeleccionada
                });
              case 3:
                _municipios = _context7.sent;
                setMunicipios(_municipios);
                _context7.next = 10;
                break;
              case 7:
                _context7.prev = 7;
                _context7.t0 = _context7["catch"](0);
                console.error("Error obteniendo municipios:", _context7.t0);
              case 10:
              case "end":
                return _context7.stop();
            }
          }, _callee7, null, [[0, 7]]);
        }));
        return function obtenerMunicipios() {
          return _ref7.apply(this, arguments);
        };
      }();
      obtenerMunicipios();
    }
  }, [provinciaSeleccionada]);
  return _react["default"].createElement(_reactNative.ScrollView, {
    contentContainerStyle: _stylesRegistro["default"].container
  }, _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].titulo
  }, "\uD83D\uDCDD Registro de Cuenta"), esProveedor && _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_reactNative.TouchableOpacity, {
    style: _stylesRegistro["default"].fotoPerfilContainer,
    onPress: seleccionarImagen
  }, imagenPerfil ? _react["default"].createElement(_reactNative.Image, {
    source: {
      uri: imagenPerfil
    },
    style: _stylesRegistro["default"].fotoPerfil
  }) : _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].textoFotoPerfil
  }, "\uD83D\uDCF7 Subir Imagen")), _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].mensajeValidacion
  }, "\u2705 Tu cuenta ser\xE1 validada en las pr\xF3ximas 24 horas.")), _react["default"].createElement(_reactNative.TextInput, {
    placeholder: "Nombre Completo",
    style: _stylesRegistro["default"].input,
    value: nombre,
    onChangeText: setNombre
  }), _react["default"].createElement(_reactNative.TextInput, {
    placeholder: "Correo Electr\xF3nico",
    style: _stylesRegistro["default"].input,
    value: correo,
    keyboardType: "email-address",
    onChangeText: setCorreo
  }), _react["default"].createElement(_reactNative.TextInput, {
    placeholder: "Contrase\xF1a",
    style: _stylesRegistro["default"].input,
    value: contrasena,
    secureTextEntry: true,
    onChangeText: setContrasena
  }), _react["default"].createElement(_reactNative.TextInput, {
    placeholder: "Tel\xE9fono",
    style: _stylesRegistro["default"].input,
    value: telefono,
    keyboardType: "phone-pad",
    onChangeText: setTelefono
  }), _react["default"].createElement(_reactNative.TouchableOpacity, {
    style: _stylesRegistro["default"].botonFiltro,
    onPress: function onPress() {
      return setModalVisible(true);
    }
  }, _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].textoBoton
  }, provinciaSeleccionada ? "".concat(nombreProvinciaSeleccionada, " - ").concat(nombreMunicipioSeleccionado || "Selecciona municipio") : "Seleccionar Ubicación")), _react["default"].createElement(_reactNative.Modal, {
    visible: modalVisible,
    animationType: "slide",
    transparent: true
  }, _react["default"].createElement(_reactNative.View, {
    style: _stylesRegistro["default"].modalContainer
  }, _react["default"].createElement(_reactNative.View, {
    style: _stylesRegistro["default"].modalContenido
  }, !mostrarMunicipios ? _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].modalTitulo
  }, "Selecciona una Provincia"), _react["default"].createElement(_reactNative.ScrollView, {
    style: _stylesRegistro["default"].scrollView
  }, provincias.map(function (item) {
    return _react["default"].createElement(_reactNative.TouchableOpacity, {
      key: item.id,
      style: [_stylesRegistro["default"].opcion, provinciaSeleccionada === item.id && _stylesRegistro["default"].opcionActiva],
      onPress: function onPress() {
        setProvinciaSeleccionada(item.id);
        setNombreProvinciaSeleccionada(item.nombre);
        setMunicipioSeleccionado(null);
        setMunicipios([]);
        setMostrarMunicipios(true);
      }
    }, _react["default"].createElement(_reactNative.Text, {
      style: _stylesRegistro["default"].textoOpcion
    }, item.nombre));
  }))) : _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_reactNative.TouchableOpacity, {
    onPress: function onPress() {
      return setMostrarMunicipios(false);
    },
    style: _stylesRegistro["default"].botonVolver
  }, _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].textoBoton
  }, "\u2190 Volver")), _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].modalTitulo
  }, "Selecciona un Municipio"), _react["default"].createElement(_reactNative.FlatList, {
    data: municipios,
    keyExtractor: function keyExtractor(item) {
      return item.id.toString();
    },
    renderItem: function renderItem(_ref8) {
      var item = _ref8.item;
      return _react["default"].createElement(_reactNative.TouchableOpacity, {
        style: [_stylesRegistro["default"].opcion, municipioSeleccionado === item.id && _stylesRegistro["default"].opcionActiva],
        onPress: function onPress() {
          setMunicipioSeleccionado(item.id);
          setNombreMunicipioSeleccionado(item.name);
          setModalVisible(false);
        }
      }, _react["default"].createElement(_reactNative.Text, {
        style: _stylesRegistro["default"].textoOpcion
      }, item.name));
    }
  })), _react["default"].createElement(_reactNative.TouchableOpacity, {
    style: _stylesRegistro["default"].botonCerrar,
    onPress: function onPress() {
      return setModalVisible(false);
    }
  }, _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].textoBoton
  }, "Cerrar"))))), _react["default"].createElement(_reactNative.View, {
    style: _stylesRegistro["default"].switchContainer
  }, _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].labelSwitch
  }, "\xBFTe registras como proveedor?"), _react["default"].createElement(_reactNative.Switch, {
    value: esProveedor,
    onValueChange: setEsProveedor
  })), esProveedor && _react["default"].createElement(_react["default"].Fragment, null, _react["default"].createElement(_reactNative.TextInput, {
    placeholder: "Especialidad (Ej: Fontaner\xEDa, Electricidad)",
    style: _stylesRegistro["default"].input,
    value: especialidad,
    onChangeText: setEspecialidad
  }), _react["default"].createElement(_reactNative.TextInput, {
    placeholder: "Descripci\xF3n del servicio",
    style: _stylesRegistro["default"].input,
    value: descripcion,
    onChangeText: setDescripcion,
    multiline: true
  }), _react["default"].createElement(_reactNative.View, {
    style: _stylesRegistro["default"].switchContainer
  }, _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].labelSwitch
  }, "Categoria"), _react["default"].createElement(_picker.Picker, {
    style: _stylesRegistro["default"].input,
    selectedValue: servicio,
    onValueChange: function onValueChange(itemValue) {
      return setServicio(itemValue);
    }
  }, servicios.map(function (servicio_data) {
    return _react["default"].createElement(_picker.Picker.Item, {
      key: servicio_data.id,
      label: servicio_data.category,
      value: servicio_data.id
    });
  }))), _react["default"].createElement(_reactNative.View, {
    style: _stylesRegistro["default"].switchContainer
  }, _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].labelSwitch
  }, "\xBFDeseas suscripcion por porcentaje?"), _react["default"].createElement(_reactNative.Switch, {
    value: esComision,
    onValueChange: setEsComision
  })), esComision && _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].labelSwitch
  }, "Porcentaje Comision (%)")), _react["default"].createElement(_reactNative.TouchableOpacity, {
    style: _stylesRegistro["default"].botonRegistrar,
    onPress: registrarUsuario,
    disabled: loading
  }, _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].textoBoton
  }, "\u2705 Registrarse")), loading && _react["default"].createElement(_reactNative.ActivityIndicator, {
    size: "large",
    color: "#FF0314",
    style: {
      marginTop: 10
    }
  }), _react["default"].createElement(_reactNative.Text, {
    style: _stylesRegistro["default"].link,
    onPress: function onPress() {
      return navigation.navigate("Login");
    }
  }, "\xBFYa tienes una cuenta? Iniciar sesi\xF3n"));
};
var _default = exports["default"] = RegistroScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,