{"version":3,"names":["_getJestObj","mock","addListener","jest","fn","removeListeners","removeListener","createAnimatedComponent","Component","Value","mockImplementation","setValue","interpolate","timing","start","spring","decay","stopAnimation","resetAnimation","addAnimation","Swipeable","_ref","children","DrawerLayout","_ref2","State","ScrollView","requireActual","TextInput","require","_globals","_require"],"sources":["jest.setup.js"],"sourcesContent":["// Importa expect de Jest primero\nimport { expect } from '@jest/globals';\n\n// Luego importa las extensiones de Testing Library\nimport '@testing-library/jest-native/extend-expect';\n\n// Mock para animaciones en React Native\njest.mock('react-native/Libraries/Animated/NativeAnimatedModule', () => ({\n  addListener: jest.fn(),\n  removeListeners: jest.fn(),\n  removeListener: jest.fn(),\n  createAnimatedComponent: (Component) => Component,\n  Value: jest.fn().mockImplementation(() => ({\n    setValue: jest.fn(),\n    interpolate: jest.fn(),\n  })),\n  timing: jest.fn(() => ({ start: jest.fn() })),\n  spring: jest.fn(() => ({ start: jest.fn() })),\n  decay: jest.fn(() => ({ start: jest.fn() })),\n  stopAnimation: jest.fn(),\n  resetAnimation: jest.fn(),\n  addAnimation: jest.fn(),\n}));\n\n// Mock para react-native-gesture-handler\njest.mock('react-native-gesture-handler', () => ({\n  Swipeable: jest.fn().mockImplementation(({ children }) => children),\n  DrawerLayout: jest.fn().mockImplementation(({ children }) => children),\n  State: {},\n  ScrollView: jest.requireActual('react-native').ScrollView,\n  TextInput: jest.requireActual('react-native').TextInput,\n}));\n\n// Mock para AsyncStorage\njest.mock('@react-native-async-storage/async-storage', () =>\n  require('@react-native-async-storage/async-storage/jest/async-storage-mock')\n);"],"mappings":";;AAOAA,WAAA,GAAKC,IAAI,CAAC,sDAAsD,EAAE;EAAA,OAAO;IACvEC,WAAW,EAAEC,IAAI,CAACC,EAAE,CAAC,CAAC;IACtBC,eAAe,EAAEF,IAAI,CAACC,EAAE,CAAC,CAAC;IAC1BE,cAAc,EAAEH,IAAI,CAACC,EAAE,CAAC,CAAC;IACzBG,uBAAuB,EAAE,SAAzBA,uBAAuBA,CAAGC,SAAS;MAAA,OAAKA,SAAS;IAAA;IACjDC,KAAK,EAAEN,IAAI,CAACC,EAAE,CAAC,CAAC,CAACM,kBAAkB,CAAC;MAAA,OAAO;QACzCC,QAAQ,EAAER,IAAI,CAACC,EAAE,CAAC,CAAC;QACnBQ,WAAW,EAAET,IAAI,CAACC,EAAE,CAAC;MACvB,CAAC;IAAA,CAAC,CAAC;IACHS,MAAM,EAAEV,IAAI,CAACC,EAAE,CAAC;MAAA,OAAO;QAAEU,KAAK,EAAEX,IAAI,CAACC,EAAE,CAAC;MAAE,CAAC;IAAA,CAAC,CAAC;IAC7CW,MAAM,EAAEZ,IAAI,CAACC,EAAE,CAAC;MAAA,OAAO;QAAEU,KAAK,EAAEX,IAAI,CAACC,EAAE,CAAC;MAAE,CAAC;IAAA,CAAC,CAAC;IAC7CY,KAAK,EAAEb,IAAI,CAACC,EAAE,CAAC;MAAA,OAAO;QAAEU,KAAK,EAAEX,IAAI,CAACC,EAAE,CAAC;MAAE,CAAC;IAAA,CAAC,CAAC;IAC5Ca,aAAa,EAAEd,IAAI,CAACC,EAAE,CAAC,CAAC;IACxBc,cAAc,EAAEf,IAAI,CAACC,EAAE,CAAC,CAAC;IACzBe,YAAY,EAAEhB,IAAI,CAACC,EAAE,CAAC;EACxB,CAAC;AAAA,CAAC,CAAC;AAGHJ,WAAA,GAAKC,IAAI,CAAC,8BAA8B,EAAE;EAAA,OAAO;IAC/CmB,SAAS,EAAEjB,IAAI,CAACC,EAAE,CAAC,CAAC,CAACM,kBAAkB,CAAC,UAAAW,IAAA;MAAA,IAAGC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;MAAA,OAAOA,QAAQ;IAAA,EAAC;IACnEC,YAAY,EAAEpB,IAAI,CAACC,EAAE,CAAC,CAAC,CAACM,kBAAkB,CAAC,UAAAc,KAAA;MAAA,IAAGF,QAAQ,GAAAE,KAAA,CAARF,QAAQ;MAAA,OAAOA,QAAQ;IAAA,EAAC;IACtEG,KAAK,EAAE,CAAC,CAAC;IACTC,UAAU,EAAEvB,IAAI,CAACwB,aAAa,CAAC,cAAc,CAAC,CAACD,UAAU;IACzDE,SAAS,EAAEzB,IAAI,CAACwB,aAAa,CAAC,cAAc,CAAC,CAACC;EAChD,CAAC;AAAA,CAAC,CAAC;AAGH5B,WAAA,GAAKC,IAAI,CAAC,2CAA2C,EAAE;EAAA,OACrD4B,OAAO,CAAC,mEAAmE,CAAC;AAAA,CAC9E,CAAC;AAnCD,IAAAC,QAAA,GAAAD,OAAA;AAGAA,OAAA;AAAoD,SAAA7B,YAAA;EAAA,IAAA+B,QAAA,GAAAF,OAAA;IAAA1B,IAAA,GAAA4B,QAAA,CAAA5B,IAAA;EAAAH,WAAA,YAAAA,YAAA;IAAA,OAAAG,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA","ignoreList":[]}