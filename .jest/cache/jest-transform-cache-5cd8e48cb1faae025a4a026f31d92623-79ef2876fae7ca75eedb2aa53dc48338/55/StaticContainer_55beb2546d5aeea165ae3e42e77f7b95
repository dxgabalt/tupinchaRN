2cc5a8dcdaa282a8d7bbe856d4cd294e
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StaticContainer = void 0;
var React = _interopRequireWildcard(require("react"));
function _getRequireWildcardCache(e) {
  if ("function" != typeof WeakMap) return null;
  var r = new WeakMap(),
    t = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(e) {
    return e ? t : r;
  })(e);
}
function _interopRequireWildcard(e, r) {
  if (!r && e && e.__esModule) return e;
  if (null === e || "object" != (0, _typeof2["default"])(e) && "function" != typeof e) return {
    "default": e
  };
  var t = _getRequireWildcardCache(r);
  if (t && t.has(e)) return t.get(e);
  var n = {
      __proto__: null
    },
    a = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) {
    var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
    i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
  }
  return n["default"] = e, t && t.set(e, n), n;
}
var StaticContainer = exports.StaticContainer = React.memo(function StaticContainer(props) {
  return props.children;
}, function (prevProps, nextProps) {
  var prevPropKeys = Object.keys(prevProps);
  var nextPropKeys = Object.keys(nextProps);
  if (prevPropKeys.length !== nextPropKeys.length) {
    return false;
  }
  for (var _i = 0, _prevPropKeys = prevPropKeys; _i < _prevPropKeys.length; _i++) {
    var key = _prevPropKeys[_i];
    if (key === 'children') {
      continue;
    }
    if (prevProps[key] !== nextProps[key]) {
      return false;
    }
  }
  return true;
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsImUiLCJXZWFrTWFwIiwiciIsInQiLCJfX2VzTW9kdWxlIiwiX3R5cGVvZjIiLCJoYXMiLCJnZXQiLCJuIiwiX19wcm90b19fIiwiYSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwidSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImkiLCJzZXQiLCJTdGF0aWNDb250YWluZXIiLCJleHBvcnRzIiwibWVtbyIsInByb3BzIiwiY2hpbGRyZW4iLCJwcmV2UHJvcHMiLCJuZXh0UHJvcHMiLCJwcmV2UHJvcEtleXMiLCJrZXlzIiwibmV4dFByb3BLZXlzIiwibGVuZ3RoIiwiX2kiLCJfcHJldlByb3BLZXlzIiwia2V5Il0sInNvdXJjZXMiOlsiLi4vLi4vc3JjL1N0YXRpY0NvbnRhaW5lci50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQStCLFNBQUFDLHlCQUFBQyxDQUFBO0VBQUEseUJBQUFDLE9BQUE7RUFBQSxJQUFBQyxDQUFBLE9BQUFELE9BQUE7SUFBQUUsQ0FBQSxPQUFBRixPQUFBO0VBQUEsUUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLENBQUE7SUFBQSxPQUFBQSxDQUFBLEdBQUFHLENBQUEsR0FBQUQsQ0FBQTtFQUFBLEdBQUFGLENBQUE7QUFBQTtBQUFBLFNBQUFILHdCQUFBRyxDQUFBLEVBQUFFLENBQUE7RUFBQSxLQUFBQSxDQUFBLElBQUFGLENBQUEsSUFBQUEsQ0FBQSxDQUFBSSxVQUFBLFNBQUFKLENBQUE7RUFBQSxhQUFBQSxDQUFBLG9CQUFBSyxRQUFBLGFBQUFMLENBQUEsMEJBQUFBLENBQUE7SUFBQSxXQUFBQTtFQUFBO0VBQUEsSUFBQUcsQ0FBQSxHQUFBSix3QkFBQSxDQUFBRyxDQUFBO0VBQUEsSUFBQUMsQ0FBQSxJQUFBQSxDQUFBLENBQUFHLEdBQUEsQ0FBQU4sQ0FBQSxVQUFBRyxDQUFBLENBQUFJLEdBQUEsQ0FBQVAsQ0FBQTtFQUFBLElBQUFRLENBQUE7TUFBQUMsU0FBQTtJQUFBO0lBQUFDLENBQUEsR0FBQUMsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQUUsd0JBQUE7RUFBQSxTQUFBQyxDQUFBLElBQUFkLENBQUEsb0JBQUFjLENBQUEsT0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFoQixDQUFBLEVBQUFjLENBQUE7SUFBQSxJQUFBRyxDQUFBLEdBQUFQLENBQUEsR0FBQUMsTUFBQSxDQUFBRSx3QkFBQSxDQUFBYixDQUFBLEVBQUFjLENBQUE7SUFBQUcsQ0FBQSxLQUFBQSxDQUFBLENBQUFWLEdBQUEsSUFBQVUsQ0FBQSxDQUFBQyxHQUFBLElBQUFQLE1BQUEsQ0FBQUMsY0FBQSxDQUFBSixDQUFBLEVBQUFNLENBQUEsRUFBQUcsQ0FBQSxJQUFBVCxDQUFBLENBQUFNLENBQUEsSUFBQWQsQ0FBQSxDQUFBYyxDQUFBO0VBQUE7RUFBQSxPQUFBTixDQUFBLGNBQUFSLENBQUEsRUFBQUcsQ0FBQSxJQUFBQSxDQUFBLENBQUFlLEdBQUEsQ0FBQWxCLENBQUEsRUFBQVEsQ0FBQSxHQUFBQSxDQUFBO0FBQUE7QUFLeEIsSUFBTVcsZUFBZSxHQUFBQyxPQUFBLENBQUFELGVBQUEsR0FBR3ZCLEtBQUssQ0FBQ3lCLElBQUksQ0FDdkMsU0FBU0YsZUFBZUEsQ0FBQ0csS0FBVSxFQUFFO0VBQ25DLE9BQU9BLEtBQUssQ0FBQ0MsUUFBUTtBQUN2QixDQUFDLEVBQ0QsVUFBQ0MsU0FBYyxFQUFFQyxTQUFjLEVBQUs7RUFDbEMsSUFBTUMsWUFBWSxHQUFHZixNQUFNLENBQUNnQixJQUFJLENBQUNILFNBQVMsQ0FBQztFQUMzQyxJQUFNSSxZQUFZLEdBQUdqQixNQUFNLENBQUNnQixJQUFJLENBQUNGLFNBQVMsQ0FBQztFQUUzQyxJQUFJQyxZQUFZLENBQUNHLE1BQU0sS0FBS0QsWUFBWSxDQUFDQyxNQUFNLEVBQUU7SUFDL0MsT0FBTyxLQUFLO0VBQ2Q7RUFFQSxTQUFBQyxFQUFBLE1BQUFDLGFBQUEsR0FBa0JMLFlBQVksRUFBQUksRUFBQSxHQUFBQyxhQUFBLENBQUFGLE1BQUEsRUFBQUMsRUFBQSxJQUFFO0lBQTNCLElBQU1FLEdBQUcsR0FBQUQsYUFBQSxDQUFBRCxFQUFBO0lBQ1osSUFBSUUsR0FBRyxLQUFLLFVBQVUsRUFBRTtNQUN0QjtJQUNGO0lBRUEsSUFBSVIsU0FBUyxDQUFDUSxHQUFHLENBQUMsS0FBS1AsU0FBUyxDQUFDTyxHQUFHLENBQUMsRUFBRTtNQUNyQyxPQUFPLEtBQUs7SUFDZDtFQUNGO0VBRUEsT0FBTyxJQUFJO0FBQ2IsQ0FDRixDQUFDIiwiaWdub3JlTGlzdCI6W119